// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PalontologistDocumentDataSlicesSlice = HerpSlice;

/**
 * Content for palontologist documents
 */
interface PalontologistDocumentData {
  /**
   * Slice Zone field in *palontologist*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: palontologist.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PalontologistDocumentDataSlicesSlice> /**
   * Meta Description field in *palontologist*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: palontologist.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *palontologist*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: palontologist.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;

  /**
   * Meta Title field in *palontologist*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: palontologist.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_title: prismic.KeyTextField;
}

/**
 * palontologist document from Prismic
 *
 * - **API ID**: `palontologist`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PalontologistDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<PalontologistDocumentData>,
    "palontologist",
    Lang
  >;

export type AllDocumentTypes = PalontologistDocument;

/**
 * Primary content in *Herp → Primary*
 */
export interface HerpSliceDefaultPrimary {
  /**
   * First Name field in *Herp → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: herp.primary.first_name
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  first_name: prismic.KeyTextField;

  /**
   * Last Name field in *Herp → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: herp.primary.last_name
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  last_name: prismic.KeyTextField;

  /**
   * Tag line field in *Herp → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: herp.primary.tag_line
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  tag_line: prismic.KeyTextField;
}

/**
 * Default variation for Herp Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HerpSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HerpSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *Herp*
 */
type HerpSliceVariation = HerpSliceDefault;

/**
 * Herp Shared Slice
 *
 * - **API ID**: `herp`
 * - **Description**: Herp
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HerpSlice = prismic.SharedSlice<"herp", HerpSliceVariation>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PalontologistDocument,
      PalontologistDocumentData,
      PalontologistDocumentDataSlicesSlice,
      AllDocumentTypes,
      HerpSlice,
      HerpSliceDefaultPrimary,
      HerpSliceVariation,
      HerpSliceDefault,
    };
  }
}
